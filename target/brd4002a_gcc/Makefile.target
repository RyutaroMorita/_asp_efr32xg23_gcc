#
#		Makefile のターゲット依存部（xG23B 868-915 MHz 14 dBm Radio Board用）
#

#
#  ボード名, チップ名，コア名，開発環境名の定義
#
BOARD = brd4002a
CHIP  = efr32xg23
DEVICE = EFR32ZG23
MODEL = $(DEVICE)B020F512IM48
PRC   = arm_m
TOOL  = gcc
SDK   = simplicity_sdk_2024.6.2

#
#  FPUを使用するか
#
FPU_USAGE = FPU_LAZYSTACKING

#
#  コンパイルオプション
#
INCLUDES := $(INCLUDES) \
	-I$(TARGETDIR) \
	-I$(TARGETDIR)/project/autogen \
	-I$(TARGETDIR)/project/config \
	-I$(TARGETDIR)/project/$(SDK)/hardware/board/inc \
	-I$(TARGETDIR)/project/$(SDK)/hardware/driver/configuration_over_swo/inc \
	-I$(TARGETDIR)/project/$(SDK)/platform/CMSIS/Core/Include \
	-I$(TARGETDIR)/project/$(SDK)/platform/common/inc \
	-I$(TARGETDIR)/project/$(SDK)/platform/Device/SiliconLabs/$(DEVICE)/Include \
	-I$(TARGETDIR)/project/$(SDK)/platform/driver/button/inc \
	-I$(TARGETDIR)/project/$(SDK)/platform/driver/debug/inc \
	-I$(TARGETDIR)/project/$(SDK)/platform/driver/leddrv/inc \
	-I$(TARGETDIR)/project/$(SDK)/platform/emdrv/common/inc \
	-I$(TARGETDIR)/project/$(SDK)/platform/emdrv/dmadrv/inc \
	-I$(TARGETDIR)/project/$(SDK)/platform/emdrv/dmadrv/inc/s2_signals \
	-I$(TARGETDIR)/project/$(SDK)/platform/emdrv/gpiointerrupt/inc \
	-I$(TARGETDIR)/project/$(SDK)/platform/emdrv/uartdrv/inc \
	-I$(TARGETDIR)/project/$(SDK)/platform/emlib/inc \
	-I$(TARGETDIR)/project/$(SDK)/platform/peripheral/inc \
	-I$(TARGETDIR)/project/$(SDK)/platform/service/clock_manager/inc \
	-I$(TARGETDIR)/project/$(SDK)/platform/service/device_init/inc \
	-I$(TARGETDIR)/project/$(SDK)/platform/service/device_manager/inc \
	-I$(TARGETDIR)/project/$(SDK)/platform/service/interrupt_manager/inc \
	-I$(TARGETDIR)/project/$(SDK)/platform/service/sleeptimer/inc \
	-I$(TARGETDIR)/project/$(SDK)/platform/service/system/inc
CDEFS := $(CDEFS) -D$(MODEL)=1
COPTS := $(COPTS)
LDFLAGS := -nostdlib $(LDFLAGS)
CFG1_OUT_LDFLAGS := -nostdlib $(CFG1_OUT_LDFLAGS)

#
# ファイルサイズ削減のためのオプション
#
COPTS   := $(COPTS) -ffunction-sections -fdata-sections
LDFLAGS := $(LDFLAGS) -Wl,--gc-sections

#
#  カーネルに関する定義
#
KERNEL_DIR := $(KERNEL_DIR) \
	$(TARGETDIR) \
	$(TARGETDIR)/project/autogen \
	$(TARGETDIR)/project/$(SDK)/hardware/board/src \
	$(TARGETDIR)/project/$(SDK)/hardware/driver/configuration_over_swo/src \
	$(TARGETDIR)/project/$(SDK)/platform/common/src \
	$(TARGETDIR)/project/$(SDK)/platform/Device/SiliconLabs/$(DEVICE)/Source \
	$(TARGETDIR)/project/$(SDK)/platform/driver/button/src \
	$(TARGETDIR)/project/$(SDK)/platform/driver/debug/src \
	$(TARGETDIR)/project/$(SDK)/platform/driver/leddrv/src \
	$(TARGETDIR)/project/$(SDK)/platform/emdrv/dmadrv/src \
	$(TARGETDIR)/project/$(SDK)/platform/emdrv/gpiointerrupt/src \
	$(TARGETDIR)/project/$(SDK)/platform/emdrv/uartdrv/src \
	$(TARGETDIR)/project/$(SDK)/platform/emlib/src \
	$(TARGETDIR)/project/$(SDK)/platform/peripheral/src \
	$(TARGETDIR)/project/$(SDK)/platform/service/system/src \
	$(TARGETDIR)/project/$(SDK)/platform/service/clock_manager/src \
	$(TARGETDIR)/project/$(SDK)/platform/service/device_init/src \
	$(TARGETDIR)/project/$(SDK)/platform/service/device_manager/clocks \
	$(TARGETDIR)/project/$(SDK)/platform/service/device_manager/devices \
	$(TARGETDIR)/project/$(SDK)/platform/service/device_manager/src \
	$(TARGETDIR)/project/$(SDK)/platform/service/interrupt_manager/src \
	$(TARGETDIR)/project/$(SDK)/platform/service/sleeptimer/src
KERNEL_ASMOBJS := $(KERNEL_ASMOBJS) start.o
KERNEL_COBJS := $(KERNEL_COBJS) \
	em_cmu.o \
	em_emu.o \
	em_eusart.o \
	em_gpio.o \
	em_ldma.o \
	em_usart.o \
	dmadrv.o \
	gpiointerrupt.o \
	sl_button.o \
	sl_board_control_gpio.o \
	sl_board_default_init.o \
	sl_board_init.o \
	sl_clock_manager.o \
	sl_clock_manager_hal_s2.o \
	sl_clock_manager_init.o \
	sl_clock_manager_init_hal_s2.o \
	sl_core_cortexm.o \
	sl_cos.o \
	sl_debug_swo.o \
	sl_device_clock_$(CHIP).o \
	sl_device_init_dcdc_s2.o \
	sl_device_init_emu_s2.o \
	sl_device_peripheral.o \
	sl_device_peripheral_hal_$(CHIP).o \
	sl_event_handler.o \
	sl_hal_sysrtc.o \
	sl_interrupt_manager_cortexm.o \
	sl_led.o \
	sl_simple_button.o \
	sl_simple_button_instances.o \
	sl_simple_led.o \
	sl_simple_led_instances.o \
	sl_sleeptimer.o \
	sl_sleeptimer_hal_sysrtc.o \
	sl_system_init.o \
	sl_uartdrv_init.o \
	system_efr32zg23.o \
	uartdrv.o \
	target_config.o
KERNEL_CFLAGS := $(KERNEL_CFLAGS)

#
#  システムサービスに関する定義
#
SYSSVC_DIR := $(SYSSVC_DIR)
SYSSVC_COBJS := $(SYSSVC_COBJS) usart.o

#
#  GNU開発環境のターゲットアーキテクチャの定義
#
GCC_TARGET = arm-none-eabi

#
#  リンカスクリプトの定義
#
LDSCRIPT = $(SRCDIR)/target/$(BOARD)_$(TOOL)/$(BOARD).ld

#
#  依存関係の定義
#
kernel_cfg.timestamp: $(TARGETDIR)/target.tf
$(OBJFILE): $(TARGETDIR)/target_check.tf

#
#  チップ依存部のインクルード
#
include $(SRCDIR)/arch/$(PRC)_$(TOOL)/$(CHIP)/Makefile.chip

#
#  フラッシュへの書き込み
#
UNAME_TARGET = Cygwin
OPENOCD_PATH = /cygdrive/c/arm/OpenOCD/0.10.0-201510281129-dev/bin/openocd.exe
OPENOCD_SCRIPT_PATH = c:/arm/OpenOCD/0.10.0-201510281129-dev/scripts
OPENOCD_SCRIPT  = c:/arm/OpenOCD/0.10.0-201510281129-dev/scripts/board/st_nucleo_f4.cfg

ifeq ($(UNAME_TARGET), Cygwin)
	GDB = arm-gdb_m0.exe
else
	GDB = $(ARDUINO_BASE_DIR_WIN)\hardware\tools\gcc-arm-none-eabi-4.8.3-2014q1\bin\arm-none-eabi-gdb
endif

run: $(OBJNAME).bin
ifeq ($(UNAME_TARGET), Cygwin)
	"`cygpath -u "$(OPENOCD_PATH)"`" -s "$(OPENOCD_SCRIPT_PATH)" -f "$(OPENOCD_SCRIPT)" -c "program ./$(OBJNAME).bin verify 0x08000000 reset exit"
#-c "flash probe 0; flash write_image erase ./$(OBJNAME).axf 0x08000000 reset exit"
else
	"$(OPENOCD_PATH)" -s "$(OPENOCD_SCRIPT_PATH)" -f "$(OPENOCD_SCRIPT)" -c "program ./$(OBJNAME).bin verify 0x4000 reset exit"
endif

ocd: $(OBJNAME).bin
ifeq ($(UNAME_TARGET), Cygwin)
	cygstart "$(OPENOCD_PATH)" '-s "$(OPENOCD_SCRIPT_PATH)"' '-f "$(OPENOCD_SCRIPT)"'
else
	start /MIN "" "$(OPENOCD_PATH)" -s "$(OPENOCD_SCRIPT_PATH)" -f "$(OPENOCD_SCRIPT)"
endif

db: $(OBJNAME).bin
ifeq ($(UNAME_TARGET), Cygwin)
	$(GDB) $(OBJFILE) -x $(TARGETDIR)/gdb.ini
else
	$(GDB) $(OBJFILE) -x $(TARGETDIR)/gdb.ini
endif

d: $(OBJNAME).bin
ifeq ($(UNAME_TARGET), Cygwin)
	$(GDB) $(OBJFILE) -x $(TARGETDIR)/gdb_noflash.ini
else

endif